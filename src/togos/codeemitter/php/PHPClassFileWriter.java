package togos.codeemitter.php;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

import togos.codeemitter.FileUtil;
import togos.function.Function;

public class PHPClassFileWriter
{
	static final String THIS_FILE_WAS_GENERATED_AUTOMATICALLY =
		"// This file was generated automatically";
	
	final File classRoot;
	final Function<String,String> classFileNamer;
	final String autoGenerationNotice =
		THIS_FILE_WAS_GENERATED_AUTOMATICALLY + ".\n" +
		"// Remove this notice to prevent automatic regeneration,\n" +
		"// e.g. if you have made manual changes directly to this file.";
	
	public PHPClassFileWriter( File classRoot, Function<String,String> classFileNamer ) {
		this.classRoot = classRoot;
		this.classFileNamer = classFileNamer;
	}
	
	protected File getClassFile( PHPClassSource cs ) {
		return new File( classRoot, classFileNamer.apply(cs.name) );
	}
	
	public void writeClassFile( PHPClassSource classSource, File classFile ) throws IOException {
		FileUtil.mkParentDirs(classFile);
		FileWriter w = new FileWriter( classFile );
		
		String not = autoGenerationNotice == null ? "" : autoGenerationNotice + "\n\n";
		
		try {
			w.write( "<?php\n\n"+not+classSource.getClassSource()+"\n" );
		} finally {
			w.close();
		}
	}
	
	public void writeClassFile( PHPClassSource classSource ) throws IOException {
		writeClassFile( classSource, getClassFile(classSource) );
	}
	
	public void writeClassFileIfMissing( PHPClassSource classSource ) throws IOException {
		File classFile = getClassFile(classSource);
		if( !classFile.exists() ) writeClassFile( classSource, classFile );
	}
	
	protected boolean fileWasAutoGenerated( File f ) throws IOException {
		BufferedReader r = new BufferedReader( new FileReader(f) );
		try {
			String l;
			for( int i=0; i < 10 && (l = r.readLine()) != null; ++i ) {
				if( l.startsWith(THIS_FILE_WAS_GENERATED_AUTOMATICALLY) ) return true;
			}
			return false;
		} finally {
			r.close();
		}
	}
	
	public void writeClassFileUnlessAltered( PHPClassSource classSource ) throws IOException {
		File classFile = getClassFile(classSource);
		if( !classFile.exists() || fileWasAutoGenerated(classFile) ) {
			writeClassFile( classSource, classFile );
		}
	}
}
